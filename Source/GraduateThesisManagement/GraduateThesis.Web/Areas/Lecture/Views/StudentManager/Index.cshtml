@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IEnumerable<StudentOutput>
@{
    IPagedList pagedInfo = (IPagedList)ViewData["PagedList"];
}

<h1 class="mt-4">Dashboard</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active">Dashboard</li>
</ol>

@*<div class="row">
    <div class="col">
        @if (TempData["statusCode"] != null && TempData["status"] != null)
        {
            string statusCode = TempData["statusCode"].ToString();
            string selectedCss;
            if (statusCode == "Failed")
            {
                selectedCss = "alert-danger";
            }
            else if (statusCode == "Warning")
            {
                selectedCss = "alert-warning";
            }
            else
            {
                selectedCss = "alert-success";
            }

            <div class="alert @selectedCss alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h5><i class="icon fas fa-check"></i> @statusCode</h5>
                @TempData["status"].ToString()
            </div>
        }
    </div>
</div>*@

<div class="card mb-4">
    <div class="card-body">
        <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">
        <svg class="svg-inline--fa fa-table me-1" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="table" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M448 32C483.3 32 512 60.65 512 96V416C512 451.3 483.3 480 448 480H64C28.65 480 0 451.3 0 416V96C0 60.65 28.65 32 64 32H448zM224 256V160H64V256H224zM64 320V416H224V320H64zM288 416H448V320H288V416zM448 256V160H288V256H448z"></path></svg><!-- <i class="fas fa-table me-1"></i> Font Awesome fontawesome.com -->
        DataTable Example
    </div>
    <div class="card-body">
        <div class="dataTable-wrapper dataTable-loading no-footer sortable searchable fixed-columns">
            <div class="dataTable-top"><div class="dataTable-dropdown"><label><select class="dataTable-selector"><option value="5">5</option><option value="10" selected="">10</option><option value="15">15</option><option value="20">20</option><option value="25">25</option></select> entries per page</label></div><div class="dataTable-search"><input class="dataTable-input" placeholder="Search..." type="text"></div></div><div class="dataTable-container">
                <table id="datatablesSimple" class="dataTable-table">
                    <thead>
                        <tr>
                            <th data-sortable="" style="width: 19.6532%;">
                                <a href="#" class="dataTable-sorter">ID</a>
                            </th>
                            <th data-sortable="" style="width: 28.9843%;">
                                <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Name)</a>
                            </th>
                            <th data-sortable="" style="width: 15.6069%;">
                                <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Phone)</a>
                            </th>
                            <th data-sortable="" style="width: 15.6069%;">
                                <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Email)</a>
                            </th>
                            <th data-sortable="" style="width: 19.6532%;">
                                <a href="#" class="dataTable-sorter">Công cụ</a>
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @{
                            int count = 0;
                        }
                        @foreach (StudentOutput studentOutput in (IEnumerable<StudentOutput>)ViewData["PagedList"])
                        {
                            <tr>
                                <td>
                                    @studentOutput.Id
                                </td>
                                <td>
                                    @studentOutput.Name
                                </td>
                                <td>
                                    @studentOutput.Phone
                                </td>
                                <td>
                                    @studentOutput.Email
                                </td>


                                <td class="project-actions text-right">
                                    <a class="btn btn-success btn-sm" href="@Url.Action("Details", new { studentId = studentOutput.Id })">
                                        <i class="fas fa-folder"></i> Chi tiết
                                    </a>
                                    <a class="btn btn-primary btn-sm" href="@Url.Action("Edit", new {  id = studentOutput.Id })">
                                        <i class="fas fa-pencil-alt"></i> Sửa
                                    </a>
                                    <button type="submit" form="deleteStudent_@count" class="btn btn-danger btn-sm"><i class="fas fa-trash"></i> Xóa</button>
                                    @using (Html.BeginForm("Delete", "Student", new { studentId = studentOutput.Id }, FormMethod.Post, true, new { @id = $"deleteStudent_{count++}" }))
                                    {
                                        @Html.AntiForgeryToken()
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="dataTable-bottom">
                <div class="dataTable-info">Showing 1 to 10 of 57 entries</div>
                <nav class="dataTable-pagination">
                    <ul class="dataTable-pagination-list">
                        @Html.PagedListPager(
                            (IPagedList)ViewData["PagedList"], p => Url.Action("Index", new { page = p }),
                            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                            {
                                LiElementClasses = new string[] { "page-item" },
                                PageClasses = new string[] { "page-link" }
                            },
                            ajaxOptions: new AjaxOptions
                            {
                                UpdateTargetId = "dataTable",
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "GET"
                            })
                        )


                        @*<li class="active"><a href="#" data-page="1">1</a></li>
                        <li class=""><a href="#" data-page="2">2</a></li>
                        <li class=""><a href="#" data-page="3">3</a></li>
                        <li class=""><a href="#" data-page="4">4</a></li>
                        <li class=""><a href="#" data-page="5">5</a></li>
                        <li class=""><a href="#" data-page="6">6</a></li>
                        <li class="pager"><a href="#" data-page="2">›</a></li>*@
                    </ul>
                </nav>

                
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
}