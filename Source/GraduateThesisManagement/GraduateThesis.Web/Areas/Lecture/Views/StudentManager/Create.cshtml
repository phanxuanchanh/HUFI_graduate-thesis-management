@model GraduateThesis.Repository.DTO.StudentInput
<h1 class="mt-4">@ViewData["PageName"]</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active"></li>
</ol>

@await Component.InvokeAsync("StatusArea")

<div class="card mb-4">
    <div class="row">
        <div class="col">
            @if (TempData["statusCode"] != null)
            {
                string statusCode = TempData["statusCode"].ToString();
                string selectedCss;
                if (statusCode == "Failed")
                {
                    selectedCss = "alert-danger";
                }
                else if (statusCode == "Warning")
                {
                    selectedCss = "alert-warning";
                }
                else
                {
                    selectedCss = "alert-success";
                }

                <div class="alert @selectedCss alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <h5><i class="icon fas fa-check"></i> @statusCode</h5>
                    @TempData["status"].ToString()
                </div>
            }
        </div>
    </div>
    <div class="card-header">
        <svg class="svg-inline--fa fa-table me-1" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="table" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="currentColor" d="M448 32C483.3 32 512 60.65 512 96V416C512 451.3 483.3 480 448 480H64C28.65 480 0 451.3 0 416V96C0 60.65 28.65 32 64 32H448zM224 256V160H64V256H224zM64 320V416H224V320H64zM288 416H448V320H288V416zM448 256V160H288V256H448z"></path></svg><!-- <i class="fas fa-table me-1"></i> Font Awesome fontawesome.com -->
        @ViewData["PageName"]
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="card-body">
            <form>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                  <div class="form-group row">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
                  <div class="form-group row">
                    @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                </div>
                  <div class="form-group row">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                    <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StudentClassId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(model => model.StudentClassId, (SelectList)ViewData["StudentClassList"], htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StudentClassId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group row">
                    <div class="col-sm-10">
                        <button type="submit" class="btn btn-primary">Đăng Ký</button>
                    </div>
                </div>
            </form>
        </div>
    }
</div>

@section Scripts{

}