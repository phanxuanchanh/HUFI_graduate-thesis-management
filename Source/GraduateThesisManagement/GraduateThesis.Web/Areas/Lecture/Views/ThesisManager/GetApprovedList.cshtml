@model IEnumerable<ThesisOutput>

<section id="basic-dropdown">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <a asp-action="ExportApprovedTheses" class="btn btn-info" type="button">Xuất</a>
                    <a asp-action="Print" class="btn btn-secondary" type="button">In</a>
                </div>
            </div>
        </div>
    </div>
</section>

@await Component.InvokeAsync("FacultyStaffLayout_StatusArea")

<section class="section">
    <div class="card">
        <div class="card-header">
        </div>
        <div class="card-body">
            <div class="dataTable-wrapper dataTable-loading no-footer sortable searchable fixed-columns">
                @await Component.InvokeAsync("FacultyStaffLayout_PagedSearch", new { action = "GetRejectedList", enableOrder = false })
                <div class="dataTable-container">
                    <table class="table table-striped dataTable-table" id="table1">
                        <thead>
                            <tr>
                                <th data-sortable="" style="width: 5%;">
                                    <a href="#" class="dataTable-sorter">STT</a>
                                </th>
                                <th data-sortable="" style="width: 10%;">
                                    <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Id)</a>
                                </th>
                                <th data-sortable="" style="width: 20%;">
                                    <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Name)</a>
                                </th>
                                <th data-sortable="" style="width: 30%;">
                                    <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Notes)</a>
                                </th>
                                <th data-sortable="" style="width: 15%;">
                                    <a href="#" class="dataTable-sorter">@Html.DisplayNameFor(model => model.Lecturer.FullName)</a>
                                </th>
                                <th data-sortable="" style="width: 20%;">
                                    <a href="#" class="dataTable-sorter">Công cụ</a>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int count = 1;
                            }
                            @foreach (ThesisOutput thesis in (IEnumerable<ThesisOutput>)ViewData["PagedList"]!)
                            {
                                <tr>
                                    <td>@count</td>
                                    <td>@thesis.Id</td>
                                    <td>@thesis.Name</td>
                                    <td>@thesis.Notes</td>
                                    <td>@thesis.Lecturer.FullName</td>
                                    <td>
                                        <a class="btn btn-primary btn-sm" asp-action="Edit" asp-route-id="@thesis.Id">
                                            <i class="fas fa-folder"></i> Sửa
                                        </a>
                                        <a class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@thesis.Id">
                                            <i class="fas fa-folder"></i> Công bố
                                        </a>
                                    </td>
                                </tr>
                                count++;
                            }
                        </tbody>
                    </table>
                </div>
                @await Component.InvokeAsync("FacultyStaffLayout_Paged", new { action = "GetRejectedList", enableOrder = false })
            </div>
        </div>
    </div>

</section>